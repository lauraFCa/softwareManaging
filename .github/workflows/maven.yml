# Workflow to Build and run tests

name: Build Tests Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    name: Build and Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GIHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=br.cesjf:HotelLucena


  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn -B clean package

    - name: Run tests with Maven
      run: mvn test


  deploy:
      runs-on: ubuntu-latest
      needs: unit-tests
      steps:
      - name: Deploy to 000webhost
        uses: SamKirkland/FTP-Deploy-Action@3.0.0
        with:
          server: files.000webhost.com
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/
          local-file: manutencaoSoft/target/HotelLucena-1.0-SNAPSHOT.jar


  interface-tests:
      runs-on: ubuntu-latest
      needs: deploy
      steps:
        - uses: actions/checkout@v2
        - name: Configurar ambiente
          uses: actions/setup-node@v2
          with:
            node-version: '14'
        - name: Instalar dependencias
          run: npm install
          working-directory: tests
        - name: Executar testes de interface - Cypress
          run: npm run cy:run
          working-directory: tests
  
  jmeter-tests:
    runs-on: ubuntu-latest
    # needs: deploy
    steps:
      - name: Listar Arquivos e Pastas
        run: |
          echo "Conteúdo do diretório:"
          ls .
        
      - name: Install JMeter
        run: |
          sudo apt-get update
          sudo apt-get install default-jre -y
          sudo apt-get install jmeter -y
      - name: Run Jmeter Tests
        run: jmeter -n -t testplan.jmx -l testreport.jtl
