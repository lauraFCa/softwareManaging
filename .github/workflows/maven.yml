# Workflow to Build and run tests

name: Build Tests Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        cache: maven
        java-version: '8'

    - name: Build
      run: mvn -B package --file pom.xml

    - name: FindBugs
      run: mvn spotbugs:check -Dspotbugs.failOnError=false -Dspotbugs.includeFilterFile=findbugs.xml

    - name: Print FindBugs Results
      run: cat target/spotbugsXml.xml
      if: always()

    - name: Generate FindBugs report
      run: mvn spotbugs:spotbugs

    - name: Convert FindBugs report to HTML
      run: mvn spotbugs:report

    - name: Download FindBugs HTML report
      uses: actions/download-artifact@v2
      with:
        name: spotbugs
        path: spotbugs-report

    - name: View FindBugs HTML report
      run: |
        echo "Open file://$(pwd)/spotbugs-report/index.html in your browser"


  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn -B clean package

    - name: Run tests with Maven
      run: mvn test


  deploy:
      runs-on: ubuntu-latest
      needs: unit-tests
      steps:
      - name: Deploy to 000webhost
        uses: SamKirkland/FTP-Deploy-Action@3.0.0
        with:
          server: files.000webhost.com
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/
          local-file: manutencaoSoft/target/HotelLucena-1.0-SNAPSHOT.jar


  interface-tests:
      runs-on: ubuntu-latest
      needs: deploy
      steps:
        - uses: actions/checkout@v2
        - name: Configurar ambiente
          uses: actions/setup-node@v2
          with:
            node-version: '14'
        - name: Instalar dependencias
          run: npm install
          working-directory: tests
        - name: Executar testes de interface - Cypress
          run: npm run cy:run
          working-directory: tests
  
  jmeter-tests:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Install JMeter
        run: |
          sudo apt-get update
          sudo apt-get install default-jre -y
          sudo apt-get install jmeter -y
      - name: Run Jmeter Tests
        run: jmeter -n -t testplan.jmx -1 testreport.jtl
